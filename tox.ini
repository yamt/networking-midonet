[tox]
envlist = docs,py27,py34,pep8
minversion = 1.8
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
usedevelop = True
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = ostestr --regex '{posargs}'

[tox:jenkins]
sitepackages = True
downloadcache = ~/cache/pip

[testenv:pep8]
commands =
  flake8
whitelist_externals = bash

[testenv:venv]
commands = {posargs}

[testenv:py34]
commands = python -m testtools.run \
     midonet.neutron.tests.unit.test_extension_agent_membership \
     midonet.neutron.tests.unit.test_extension_lbaas
#    midonet.neutron.tests.unit.test_midonet_plugin
#    midonet.neutron.tests.unit.test_midonet_plugin_v2

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:genconfig]
commands =
    mkdir -p etc/midonet
    oslo-config-generator --output-file etc/midonet/midonet.ini.sample \
    --namespace midonet
whitelist_externals = mkdir

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with ‘# ‘
# H404 multi line docstring should start with a summary
# H405 multi line docstring summary not separated with an empty line
ignore = E125,E126,E128,E129,E265,H404,H405
show-source = true
builtins = _
exclude = .venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build,tools,.ropeproject,rally-scenarios

[hacking]
import_exceptions = neutron.openstack.common.gettextutils
local-check-factory = neutron.hacking.checks.factory
